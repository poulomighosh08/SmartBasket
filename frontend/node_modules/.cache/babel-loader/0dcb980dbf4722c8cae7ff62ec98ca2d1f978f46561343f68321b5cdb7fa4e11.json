{"ast":null,"code":"import { apiSlice } from './apiSlice';\nimport { ORDERS_URL, PAYPAL_URL } from '../constants';\nexport const orderApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    createOrder: builder.mutation({\n      query: order => ({\n        url: ORDERS_URL,\n        method: 'POST',\n        body: order\n      })\n    }),\n    getOrderDetails: builder.query({\n      query: id => ({\n        url: `${ORDERS_URL}/${id}`\n      }),\n      keepUnusedDataFor: 5\n    }),\n    payOrder: builder.mutation({\n      query: _ref => {\n        let {\n          orderId,\n          details\n        } = _ref;\n        return {\n          url: `${ORDERS_URL}/${orderId}/pay`,\n          method: 'PUT',\n          body: details\n        };\n      }\n    }),\n    getPaypalClientId: builder.query({\n      query: () => ({\n        url: PAYPAL_URL\n      }),\n      keepUnusedDataFor: 5\n    }),\n    getMyOrders: builder.query({\n      query: () => ({\n        url: `${ORDERS_URL}/mine`\n      }),\n      keepUnusedDataFor: 5\n    }),\n    getOrders: builder.query({\n      query: () => ({\n        url: ORDERS_URL\n      }),\n      keepUnusedDataFor: 5\n    }),\n    deliverOrder: builder.mutation({\n      query: orderId => ({\n        url: `${ORDERS_URL}/${orderId}/deliver`,\n        method: 'PUT'\n      })\n    })\n  })\n});\nexport const {\n  useCreateOrderMutation,\n  useGetOrderDetailsQuery,\n  usePayOrderMutation,\n  useGetPaypalClientIdQuery,\n  useGetMyOrdersQuery,\n  useGetOrdersQuery,\n  useDeliverOrderMutation\n} = orderApiSlice;","map":{"version":3,"names":["apiSlice","ORDERS_URL","PAYPAL_URL","orderApiSlice","injectEndpoints","endpoints","builder","createOrder","mutation","query","order","url","method","body","getOrderDetails","id","keepUnusedDataFor","payOrder","_ref","orderId","details","getPaypalClientId","getMyOrders","getOrders","deliverOrder","useCreateOrderMutation","useGetOrderDetailsQuery","usePayOrderMutation","useGetPaypalClientIdQuery","useGetMyOrdersQuery","useGetOrdersQuery","useDeliverOrderMutation"],"sources":["/home/poulg/E-Commerce App/frontend/src/slices/ordersApiSlice.js"],"sourcesContent":["import { apiSlice } from './apiSlice';\nimport { ORDERS_URL, PAYPAL_URL } from '../constants';\n\nexport const orderApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    createOrder: builder.mutation({\n      query: (order) => ({\n        url: ORDERS_URL,\n        method: 'POST',\n        body: order,\n      }),\n    }),\n    getOrderDetails: builder.query({\n      query: (id) => ({\n        url: `${ORDERS_URL}/${id}`,\n      }),\n      keepUnusedDataFor: 5,\n    }),\n    payOrder: builder.mutation({\n      query: ({ orderId, details }) => ({\n        url: `${ORDERS_URL}/${orderId}/pay`,\n        method: 'PUT',\n        body: details,\n      }),\n    }),\n    getPaypalClientId: builder.query({\n      query: () => ({\n        url: PAYPAL_URL,\n      }),\n      keepUnusedDataFor: 5,\n    }),\n    getMyOrders: builder.query({\n      query: () => ({\n        url: `${ORDERS_URL}/mine`,\n      }),\n      keepUnusedDataFor: 5,\n    }),\n    getOrders: builder.query({\n      query: () => ({\n        url: ORDERS_URL,\n      }),\n      keepUnusedDataFor: 5,\n    }),\n    deliverOrder: builder.mutation({\n      query: (orderId) => ({\n        url: `${ORDERS_URL}/${orderId}/deliver`,\n        method: 'PUT',\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useCreateOrderMutation,\n  useGetOrderDetailsQuery,\n  usePayOrderMutation,\n  useGetPaypalClientIdQuery,\n  useGetMyOrdersQuery,\n  useGetOrdersQuery,\n  useDeliverOrderMutation,\n} = orderApiSlice;\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,UAAU,EAAEC,UAAU,QAAQ,cAAc;AAErD,OAAO,MAAMC,aAAa,GAAGH,QAAQ,CAACI,eAAe,CAAC;EACpDC,SAAS,EAAGC,OAAO,KAAM;IACvBC,WAAW,EAAED,OAAO,CAACE,QAAQ,CAAC;MAC5BC,KAAK,EAAGC,KAAK,KAAM;QACjBC,GAAG,EAAEV,UAAU;QACfW,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC;IACH,CAAC,CAAC;IACFI,eAAe,EAAER,OAAO,CAACG,KAAK,CAAC;MAC7BA,KAAK,EAAGM,EAAE,KAAM;QACdJ,GAAG,EAAG,GAAEV,UAAW,IAAGc,EAAG;MAC3B,CAAC,CAAC;MACFC,iBAAiB,EAAE;IACrB,CAAC,CAAC;IACFC,QAAQ,EAAEX,OAAO,CAACE,QAAQ,CAAC;MACzBC,KAAK,EAAES,IAAA;QAAA,IAAC;UAAEC,OAAO;UAAEC;QAAQ,CAAC,GAAAF,IAAA;QAAA,OAAM;UAChCP,GAAG,EAAG,GAAEV,UAAW,IAAGkB,OAAQ,MAAK;UACnCP,MAAM,EAAE,KAAK;UACbC,IAAI,EAAEO;QACR,CAAC;MAAA;IACH,CAAC,CAAC;IACFC,iBAAiB,EAAEf,OAAO,CAACG,KAAK,CAAC;MAC/BA,KAAK,EAAEA,CAAA,MAAO;QACZE,GAAG,EAAET;MACP,CAAC,CAAC;MACFc,iBAAiB,EAAE;IACrB,CAAC,CAAC;IACFM,WAAW,EAAEhB,OAAO,CAACG,KAAK,CAAC;MACzBA,KAAK,EAAEA,CAAA,MAAO;QACZE,GAAG,EAAG,GAAEV,UAAW;MACrB,CAAC,CAAC;MACFe,iBAAiB,EAAE;IACrB,CAAC,CAAC;IACFO,SAAS,EAAEjB,OAAO,CAACG,KAAK,CAAC;MACvBA,KAAK,EAAEA,CAAA,MAAO;QACZE,GAAG,EAAEV;MACP,CAAC,CAAC;MACFe,iBAAiB,EAAE;IACrB,CAAC,CAAC;IACFQ,YAAY,EAAElB,OAAO,CAACE,QAAQ,CAAC;MAC7BC,KAAK,EAAGU,OAAO,KAAM;QACnBR,GAAG,EAAG,GAAEV,UAAW,IAAGkB,OAAQ,UAAS;QACvCP,MAAM,EAAE;MACV,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXa,sBAAsB;EACtBC,uBAAuB;EACvBC,mBAAmB;EACnBC,yBAAyB;EACzBC,mBAAmB;EACnBC,iBAAiB;EACjBC;AACF,CAAC,GAAG5B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}