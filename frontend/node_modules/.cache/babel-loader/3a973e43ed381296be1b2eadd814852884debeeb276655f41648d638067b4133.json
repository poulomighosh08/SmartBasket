{"ast":null,"code":"var _jsxFileName = \"/home/poulg/E-Commerce App/frontend/src/screens/PaymentScreen.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../slices/cartSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  useEffect(() => {\n    if (!shippingAddress.address) {\n      navigate('/shipping');\n    }\n  }, [navigate, shippingAddress]);\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\n  const dispatch = useDispatch();\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    navigate('/placeorder');\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"Select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"my-2\",\n            type: \"radio\",\n            label: \"PayPal or Credit Card\",\n            id: \"PayPal\",\n            name: \"paymentMethod\",\n            value: \"PayPal\",\n            checked: true,\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentScreen, \"ddWA/+a+hZwHfD0zNNT5/yXsVjQ=\", false, function () {\n  return [useNavigate, useSelector, useDispatch];\n});\n_c = PaymentScreen;\nexport default PaymentScreen;\nvar _c;\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"names":["useState","useEffect","Form","Button","Col","useNavigate","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","jsxDEV","_jsxDEV","PaymentScreen","_s","navigate","cart","state","shippingAddress","address","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","children","step1","step2","step3","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","Label","as","Check","className","type","label","id","name","value","checked","onChange","target","variant","_c","$RefreshReg$"],"sources":["/home/poulg/E-Commerce App/frontend/src/screens/PaymentScreen.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../slices/cartSlice';\n\nconst PaymentScreen = () => {\n  const navigate = useNavigate();\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  useEffect(() => {\n    if (!shippingAddress.address) {\n      navigate('/shipping');\n    }\n  }, [navigate, shippingAddress]);\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    navigate('/placeorder');\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              className='my-2'\n              type='radio'\n              label='PayPal or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}