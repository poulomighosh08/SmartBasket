{"ast":null,"code":"import { apiSlice } from './apiSlice';\nimport { USERS_URL } from '../constants';\nexport const userApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    login: builder.mutation({\n      query: data => ({\n        url: `${USERS_URL}/auth`,\n        method: 'POST',\n        body: data\n      })\n    }),\n    register: builder.mutation({\n      query: data => ({\n        url: `${USERS_URL}`,\n        method: 'POST',\n        body: data\n      })\n    }),\n    logout: builder.mutation({\n      query: () => ({\n        url: `${USERS_URL}/logout`,\n        method: 'POST'\n      })\n    }),\n    profile: builder.mutation({\n      query: data => ({\n        url: `${USERS_URL}/profile`,\n        method: 'PUT',\n        body: data\n      })\n    }),\n    getUsers: builder.query({\n      query: () => ({\n        url: USERS_URL\n      }),\n      providesTags: ['User'],\n      keepUnusedDataFor: 5\n    }),\n    deleteUser: builder.mutation({\n      query: userId => ({\n        url: `${USERS_URL}/${userId}`,\n        method: 'DELETE'\n      })\n    }),\n    getUserDetails: builder.query({\n      query: id => ({\n        url: `${USERS_URL}/${id}`\n      }),\n      keepUnusedDataFor: 5\n    }),\n    updateUser: builder.mutation({\n      query: data => ({\n        url: `${USERS_URL}/${data.userId}`,\n        method: 'PUT',\n        body: data\n      }),\n      invalidatesTags: ['User']\n    })\n  })\n});\nexport const {\n  useLoginMutation,\n  useLogoutMutation,\n  useRegisterMutation,\n  useProfileMutation,\n  useGetUsersQuery,\n  useDeleteUserMutation,\n  useUpdateUserMutation,\n  useGetUserDetailsQuery\n} = userApiSlice;","map":{"version":3,"names":["apiSlice","USERS_URL","userApiSlice","injectEndpoints","endpoints","builder","login","mutation","query","data","url","method","body","register","logout","profile","getUsers","providesTags","keepUnusedDataFor","deleteUser","userId","getUserDetails","id","updateUser","invalidatesTags","useLoginMutation","useLogoutMutation","useRegisterMutation","useProfileMutation","useGetUsersQuery","useDeleteUserMutation","useUpdateUserMutation","useGetUserDetailsQuery"],"sources":["/home/poulg/E-Commerce App/frontend/src/slices/usersApiSlice.js"],"sourcesContent":["import { apiSlice } from './apiSlice';\nimport { USERS_URL } from '../constants';\n\nexport const userApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    login: builder.mutation({\n      query: (data) => ({\n        url: `${USERS_URL}/auth`,\n        method: 'POST',\n        body: data,\n      }),\n    }),\n    register: builder.mutation({\n      query: (data) => ({\n        url: `${USERS_URL}`,\n        method: 'POST',\n        body: data,\n      }),\n    }),\n    logout: builder.mutation({\n      query: () => ({\n        url: `${USERS_URL}/logout`,\n        method: 'POST',\n      }),\n    }),\n    profile: builder.mutation({\n      query: (data) => ({\n        url: `${USERS_URL}/profile`,\n        method: 'PUT',\n        body: data,\n      }),\n    }),\n    getUsers: builder.query({\n      query: () => ({\n        url: USERS_URL,\n      }),\n      providesTags: ['User'],\n      keepUnusedDataFor: 5,\n    }),\n    deleteUser: builder.mutation({\n      query: (userId) => ({\n        url: `${USERS_URL}/${userId}`,\n        method: 'DELETE',\n      }),\n    }),\n    getUserDetails: builder.query({\n      query: (id) => ({\n        url: `${USERS_URL}/${id}`,\n      }),\n      keepUnusedDataFor: 5,\n    }),\n    updateUser: builder.mutation({\n      query: (data) => ({\n        url: `${USERS_URL}/${data.userId}`,\n        method: 'PUT',\n        body: data,\n      }),\n      invalidatesTags: ['User'],\n    }),\n  }),\n});\n\nexport const {\n  useLoginMutation,\n  useLogoutMutation,\n  useRegisterMutation,\n  useProfileMutation,\n  useGetUsersQuery,\n  useDeleteUserMutation,\n  useUpdateUserMutation,\n  useGetUserDetailsQuery,\n} = userApiSlice;\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,SAAS,QAAQ,cAAc;AAExC,OAAO,MAAMC,YAAY,GAAGF,QAAQ,CAACG,eAAe,CAAC;EACnDC,SAAS,EAAGC,OAAO,KAAM;IACvBC,KAAK,EAAED,OAAO,CAACE,QAAQ,CAAC;MACtBC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAG,GAAET,SAAU,OAAM;QACxBU,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC;IACH,CAAC,CAAC;IACFI,QAAQ,EAAER,OAAO,CAACE,QAAQ,CAAC;MACzBC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAG,GAAET,SAAU,EAAC;QACnBU,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH;MACR,CAAC;IACH,CAAC,CAAC;IACFK,MAAM,EAAET,OAAO,CAACE,QAAQ,CAAC;MACvBC,KAAK,EAAEA,CAAA,MAAO;QACZE,GAAG,EAAG,GAAET,SAAU,SAAQ;QAC1BU,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IACFI,OAAO,EAAEV,OAAO,CAACE,QAAQ,CAAC;MACxBC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAG,GAAET,SAAU,UAAS;QAC3BU,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEH;MACR,CAAC;IACH,CAAC,CAAC;IACFO,QAAQ,EAAEX,OAAO,CAACG,KAAK,CAAC;MACtBA,KAAK,EAAEA,CAAA,MAAO;QACZE,GAAG,EAAET;MACP,CAAC,CAAC;MACFgB,YAAY,EAAE,CAAC,MAAM,CAAC;MACtBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;IACFC,UAAU,EAAEd,OAAO,CAACE,QAAQ,CAAC;MAC3BC,KAAK,EAAGY,MAAM,KAAM;QAClBV,GAAG,EAAG,GAAET,SAAU,IAAGmB,MAAO,EAAC;QAC7BT,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IACFU,cAAc,EAAEhB,OAAO,CAACG,KAAK,CAAC;MAC5BA,KAAK,EAAGc,EAAE,KAAM;QACdZ,GAAG,EAAG,GAAET,SAAU,IAAGqB,EAAG;MAC1B,CAAC,CAAC;MACFJ,iBAAiB,EAAE;IACrB,CAAC,CAAC;IACFK,UAAU,EAAElB,OAAO,CAACE,QAAQ,CAAC;MAC3BC,KAAK,EAAGC,IAAI,KAAM;QAChBC,GAAG,EAAG,GAAET,SAAU,IAAGQ,IAAI,CAACW,MAAO,EAAC;QAClCT,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEH;MACR,CAAC,CAAC;MACFe,eAAe,EAAE,CAAC,MAAM;IAC1B,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EACXC,gBAAgB;EAChBC,iBAAiB;EACjBC,mBAAmB;EACnBC,kBAAkB;EAClBC,gBAAgB;EAChBC,qBAAqB;EACrBC,qBAAqB;EACrBC;AACF,CAAC,GAAG9B,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}